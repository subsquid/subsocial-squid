enum EventAction {
  PostCreated
  PostDeleted
  PostUpdated
  PostShared
  PostMoved
  PostReactionCreated
  PostReactionUpdated
  PostReactionDeleted
  SpaceCreated
  SpaceUpdated
  SpaceFollowed
  SpaceUnfollowed
  AccountFollowed
  AccountUnfollowed
}

enum PostKind {
  Comment
  SharedPost
  RegularPost
}

type Account @entity {
  id: ID!
  reputation: Int
  hasProfile: Boolean
  name: String
  avatar: String
  about: String
  createdAtBlock: BigInt
  createdAtTime: DateTime
  createdOnDay: DateTime

  followers: [AccountFollowers]! @derivedFrom(field: "followingAccount")
  followersCount: Int

  followingAccounts: [AccountFollowers]! @derivedFrom(field: "followerAccount")
  followingAccountsCount: Int

  posts: [Post] @derivedFrom(field: "createdByAccount")

  spacesCreated: [Space!] @derivedFrom(field: "createdByAccount")
  spacesOwned: [Space!] @derivedFrom(field: "ownerAccount")
  spacesFollowed: [SpaceFollowers!] @derivedFrom(field: "followerAccount")
  followingSpacesCount: Int

  feeds: [NewsFeed]! @derivedFrom(field: "account")
  notifications: [Notification]! @derivedFrom(field: "account")
}

type Post @entity {
  id: ID!
  parentId: String
  rootPostId: String
  sharedPostId: String

  createdByAccount: Account!
  createdAtBlock: BigInt
  createdAtTime: DateTime
  createdOnDay: DateTime
  updatedAtTime: DateTime
  space: Space
  kind: PostKind
  postFollowers: [PostFollowers] @derivedFrom(field: "followingPost")
  commentFollowers: [CommentFollowers] @derivedFrom(field: "followingComment")

  repliesCount: Int
  publicRepliesCount: Int
  hiddenRepliesCount: Int
  sharesCount: Int
  upvotesCount: Int
  downvotesCount: Int
  score: Int

  title: String
  content: String
  slug: String
  summary: String
  image: String
  canonical: String
  tagsOriginal: String

  proposalIndex: Int
}

type Space @entity {
  id: ID!
  createdByAccount: Account!
  ownerAccount: Account!

  createdAtBlock: BigInt
  createdAtTime: DateTime
  createdOnDay: DateTime
  updatedAtTime: DateTime

  postsCount: Int
  publicPostsCount: Int
  hiddenPostsCount: Int
  followersCount: Int
  score: Int

  content: String
  name: String
  image: String
  summary: String
  tagsOriginal: String

  followers: [SpaceFollowers]! @derivedFrom(field: "followingSpace")
}

type Activity @entity {
  id: ID!
  account: Account!
  blockNumber: BigInt!
  eventIndex: Int!
  event: EventAction!
  followingId: String
  spaceId: BigInt
  postId: BigInt
  commentId: BigInt
  parentCommentId: BigInt
  date: DateTime!
  aggregated: Boolean!
  aggCount: BigInt!
}

type AccountFollowers @entity {
  followerAccount: Account!
  followingAccount: Account!
}

type SpaceFollowers @entity {
  followerAccount: Account!
  followingSpace: Space!
}

type PostFollowers @entity {
  followerAccount: Account!
  followingPost: Post!
}

type CommentFollowers @entity {
  followerAccount: Account!
  followingComment: Post!
}

type NewsFeed @entity {
  account: Account!
  activity: Activity!
}

type Notification @entity {
  account: Account!
  activity: Activity!
}
